% Generated by roxygen2 (4.1.0): do not edit by hand
% Please edit documentation in R/pd.R
\name{partial_dependence.RandomForest}
\alias{partial_dependence.RandomForest}
\title{Partial dependence for RandomForest objects from package \code{party}}
\usage{
\method{partial_dependence}{RandomForest}(fit, var, cutoff = 10,
  empirical = TRUE, parallel = FALSE, ...)
}
\arguments{
\item{fit}{an object of class 'RandomForest' returned from \code{cforest}}

\item{var}{a character vector of the predictors of interest, which must match the input matrix in the call to \code{randomForest}}

\item{cutoff}{the maximal number of unique points in each element of 'var' used in the
partial dependence calculation}

\item{empirical}{logical indicator of whether or not only values in the data should be sampled}

\item{parallel}{logical indicator of whether a parallel backend should be used if registered}

\item{...}{additional arguments to be passed to \code{predict.RandomForest}}
}
\value{
a dataframe with columns for each predictor in `var` and the fitted value for
each set of values taken by the values of 'var' averaged within the values of predictors
in the model but not in `var`

#'
}
\description{
Calculates the partial dependence of the response on an arbitrary dimensional set of predictors
from a fitted random forest object from the \code{party} package
}
\examples{
\dontrun{
library(party)
## library(doParallel)
## library(parallel)
## registerDoParallel(makeCluster(detectCores()))

## Classification

data(iris)

fit <- cforest(Species ~ ., iris, controls = cforest_control(mtry = 2))
pd <- partial_dependence(fit, "Petal.Width")
pd_int <- partial_dependence(fit, c("Petal.Width", "Sepal.Length"))

## Regression

data(swiss)

fit <- cforest(Fertility ~ ., swiss, controls = cforest_control(mtry = 2))
pd <- partial_dependence(fit, "Education")
pd_int <- partial_dependence(fit, c("Education", "Catholic"))

## Multivariate
...
}
}

